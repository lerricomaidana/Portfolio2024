{
	"info": {
		"_postman_id": "8c28a272-8720-4e59-9179-6081564eeabd",
		"name": "MyStore API - Assertions mas avanzadas",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "35352344"
	},
	"item": [
		{
			"name": "Todos los Productos",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://mystoreapi.com/catalog/products?limit=1&skip=1000",
					"protocol": "https",
					"host": [
						"mystoreapi",
						"com"
					],
					"path": [
						"catalog",
						"products"
					],
					"query": [
						{
							"key": "limit",
							"value": "1"
						},
						{
							"key": "skip",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Producto por ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Respuesta de API contiene campo ID\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"id\");\r",
							"});\r",
							"\r",
							"pm.test(\"Respuesta de API contiene campo precio\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"price\");\r",
							"});\r",
							"\r",
							"pm.test(\"Respuesta de API contiene campo ID\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"id\");\r",
							"});\r",
							"//creada a proposito\r",
							"\r",
							"pm.test(\"Encabezado de respuesta contiene fecha\", function () {\r",
							"    pm.response.to.have.header(\"Date\");\r",
							"});\r",
							"\r",
							"pm.test(\"Prueba que valida el estado que da siempre activo\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.status).to.eql(\"active\");\r",
							"});\r",
							"\r",
							"//Assersions mas avanzadas\r",
							"//Uso https://learning.postman.com/docs/tests-and-scripts/write-scripts/test-examples/\r",
							"\r",
							"pm.test(\"Validacion con multiples assersions \", () => {\r",
							"    //declaro una variable que se llama ´responseJason´\r",
							"    const responseJson = pm.response.json();\r",
							"\r",
							"    pm.expect(responseJson.name).to.eql('Fantastic Steel Soap');\r",
							"    pm.expect(responseJson.name).to.contains('Steel');\r",
							"    pm.expect(responseJson.name).to.be.a('string');\r",
							"    pm.expect(responseJson.name).to.have.lengthOf(20);\r",
							"});\r",
							"\r",
							"pm.test(\"Validacion con multiples assersions sale mal a proposito\", () => {\r",
							"    const responseJson = pm.response.json();\r",
							"\r",
							"    pm.expect(responseJson.id).to.eql('884339');\r",
							"    pm.expect(responseJson.description).to.contains('Samsung');\r",
							"    pm.expect(responseJson.name).to.be.a('int');\r",
							"    pm.expect(responseJson.name).to.have.lengthOf(2);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://mystoreapi.com/catalog/product/884339",
					"protocol": "https",
					"host": [
						"mystoreapi",
						"com"
					],
					"path": [
						"catalog",
						"product",
						"884339"
					]
				}
			},
			"response": []
		}
	]
}